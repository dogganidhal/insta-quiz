scalar GraphQLDateTime

enum QuestionType {
  SINGLE_CHOICE
  MULTI_CHOICE
  INPUT
}

type User {
  id: ID!
  fullName: String
  email: String!
  submissions: [Submission]
}

type Quiz {
  id: ID!
  title: String!
  description: String!
  authorId: ID!
  author: User!
  deadline: GraphQLDateTime
  questions: [Question]!
  submissions: [Submission]
}

type Question {
  id: ID!
  content: String!
  quizId: ID!
  quiz: Quiz!
  type: QuestionType!
  suggestions: [Suggestion]!
  answers: [Answer]!
}

type Suggestion {
  id: ID!
  questionId: ID!
  question: Question!
  content: String
  imageUrl: String
  isCorrect: Boolean!
}

type Submission {
  id: ID!
  userId: ID!
  user: User!
  quizId: ID!
  quiz: Quiz!
  answers: [Answer]
}

type Answer {
  id: ID!
  content: String
  submissionId: ID!
  submission: Submission!
  suggestionId: ID!
  suggestion: Suggestion!
}

type AuthCredentials {
  accessToken: String!
}

type Query {
  me: User
  login(token: String!): AuthCredentials!
  myQuizzes: [Quiz]
}

type Mutation {
  createQuiz(quizData: InsertQuizObject): Quiz
}

input InsertQuizObject {
  title: String!
  description: String!
  deadline: GraphQLDateTime
  questions: [InsertQuestionObject]!
}

input InsertQuestionObject {
  content: String!
  type: QuestionType!
  suggestions: [InsertSuggestionObject]
}

input InsertSuggestionObject {
  content: String
  imageUrl: String
  isCorrect: Boolean
}